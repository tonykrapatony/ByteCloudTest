!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@popperjs/core")):"function"==typeof define&&define.amd?define(["@popperjs/core"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap=e(t.Popper)}(this,function(t){"use strict";const i=function(t){if(t&&t.__esModule)return t;var e,i=Object.create(null,{[Symbol.toStringTag]:{value:"Module"}});if(t)for(const s in t)"default"!==s&&(e=Object.getOwnPropertyDescriptor(t,s),Object.defineProperty(i,s,e.get?e:{enumerable:!0,get:()=>t[s]}));return i.default=t,Object.freeze(i)}(t),j="transitionend",F=e=>{let i=e.getAttribute("data-bs-target");if(!i||"#"===i){let t=e.getAttribute("href");if(!t||!t.includes("#")&&!t.startsWith("."))return null;t.includes("#")&&!t.startsWith("#")&&(t="#"+t.split("#")[1]),i=t&&"#"!==t?t.trim():null}return i},z=t=>{t=F(t);return t&&document.querySelector(t)?t:null},n=t=>{t=F(t);return t?document.querySelector(t):null},H=t=>{t.dispatchEvent(new Event(j))},o=t=>!(!t||"object"!=typeof t)&&void 0!==(t=void 0!==t.jquery?t[0]:t).nodeType,s=t=>o(t)?t.jquery?t[0]:t:"string"==typeof t&&0<t.length?document.querySelector(t):null,r=t=>{if(!o(t)||0===t.getClientRects().length)return!1;const e="visible"===getComputedStyle(t).getPropertyValue("visibility"),i=t.closest("details:not([open])");if(i&&i!==t){const e=t.closest("summary");if(e&&e.parentNode!==i)return!1;if(null===e)return!1}return e},a=t=>!t||t.nodeType!==Node.ELEMENT_NODE||!!t.classList.contains("disabled")||(void 0!==t.disabled?t.disabled:t.hasAttribute("disabled")&&"false"!==t.getAttribute("disabled")),q=t=>{var e;return document.documentElement.attachShadow?"function"==typeof t.getRootNode?(e=t.getRootNode())instanceof ShadowRoot?e:null:t instanceof ShadowRoot?t:t.parentNode?q(t.parentNode):null:null},l=()=>{},c=t=>{t.offsetHeight},B=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,W=[],h=()=>"rtl"===document.documentElement.dir,e=s=>{var t=()=>{const t=B();if(t){const e=s.NAME,i=t.fn[e];t.fn[e]=s.jQueryInterface,t.fn[e].Constructor=s,t.fn[e].noConflict=()=>(t.fn[e]=i,s.jQueryInterface)}};"loading"===document.readyState?(W.length||document.addEventListener("DOMContentLoaded",()=>{for(const t of W)t()}),W.push(t)):t()},d=t=>{"function"==typeof t&&t()},$=(i,n,t=!0)=>{if(t){t=(()=>{if(!n)return 0;let{transitionDuration:t,transitionDelay:e}=window.getComputedStyle(n);var i=Number.parseFloat(t),s=Number.parseFloat(e);return i||s?(t=t.split(",")[0],e=e.split(",")[0],1e3*(Number.parseFloat(t)+Number.parseFloat(e))):0})()+5;let e=!1;const s=({target:t})=>{t===n&&(e=!0,n.removeEventListener(j,s),d(i))};n.addEventListener(j,s),setTimeout(()=>{e||H(n)},t)}else d(i)},R=(t,e,i,s)=>{var n=t.length;let o=t.indexOf(e);return-1===o?!i&&s?t[n-1]:t[0]:(o+=i?1:-1,s&&(o=(o+n)%n),t[Math.max(0,Math.min(o,n-1))])},V=/[^.]*(?=\..*)\.|.*/,K=/\..*/,Q=/::\d+$/,X={};let Y=1;const U={mouseenter:"mouseover",mouseleave:"mouseout"},G=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function J(t,e){return e&&e+"::"+Y++||t.uidEvent||Y++}function Z(t){var e=J(t);return t.uidEvent=e,X[e]=X[e]||{},X[e]}function tt(t,e,i=null){return Object.values(t).find(t=>t.callable===e&&t.delegationSelector===i)}function et(t,e,i){var s="string"==typeof e,e=!s&&e||i;let n=nt(t);return[s,e,n=G.has(n)?n:t]}function it(s,n,o,r,a){if("string"==typeof n&&s){let[t,e,i]=et(n,o,r);if(n in U){const s=e=>function(t){if(!t.relatedTarget||t.relatedTarget!==t.delegateTarget&&!t.delegateTarget.contains(t.relatedTarget))return e.call(this,t)};e=s(e)}var r=Z(s),r=r[i]||(r[i]={}),l=tt(r,e,t?o:null);if(l)return l.oneOff=l.oneOff&&a;var c,h,d,u,_,l=J(e,n.replace(V,"")),n=t?(d=s,u=o,_=e,function e(i){var s=d.querySelectorAll(u);for(let t=i["target"];t&&t!==this;t=t.parentNode)for(const n of s)if(n===t)return ot(i,{delegateTarget:t}),e.oneOff&&g.off(d,i.type,u,_),_.apply(t,[i])}):(c=s,h=e,function t(e){return ot(e,{delegateTarget:c}),t.oneOff&&g.off(c,e.type,h),h.apply(c,[e])});n.delegationSelector=t?o:null,n.callable=e,n.oneOff=a,r[n.uidEvent=l]=n,s.addEventListener(i,n,t)}}function st(t,e,i,s,n){s=tt(e[i],s,n);s&&(t.removeEventListener(i,s,Boolean(n)),delete e[i][s.uidEvent])}function nt(t){return t=t.replace(K,""),U[t]||t}const g={on(t,e,i,s){it(t,e,i,s,!1)},one(t,e,i,s){it(t,e,i,s,!0)},off(t,e,i,s){if("string"==typeof e&&t){var[s,n,o]=et(e,i,s),r=o!==e,a=Z(t),l=a[o]||{},c=e.startsWith(".");if(void 0===n){if(c)for(const i of Object.keys(a)){h=void 0;d=void 0;u=void 0;_=void 0;g=void 0;var h=t;var d=a;var u=i;var _=e.slice(1);var g=d[u]||{};for(const p of Object.keys(g))if(p.includes(_)){const _=g[p];st(h,d,u,_.callable,_.delegationSelector)}}for(const i of Object.keys(l)){const s=i.replace(Q,"");if(!r||e.includes(s)){const e=l[i];st(t,a,o,e.callable,e.delegationSelector)}}}else Object.keys(l).length&&st(t,a,o,n,s?i:null)}},trigger(t,e,i){if("string"!=typeof e||!t)return null;var s=B();let n=null,o=!0,r=!0,a=!1;e!==nt(e)&&s&&(n=s.Event(e,i),s(t).trigger(n),o=!n.isPropagationStopped(),r=!n.isImmediatePropagationStopped(),a=n.isDefaultPrevented());s=ot(s=new Event(e,{bubbles:o,cancelable:!0}),i);return a&&s.preventDefault(),r&&t.dispatchEvent(s),s.defaultPrevented&&n&&n.preventDefault(),s}};function ot(t,e){for(const[i,s]of Object.entries(e||{}))try{t[i]=s}catch(e){Object.defineProperty(t,i,{configurable:!0,get:()=>s})}return t}const u=new Map,rt={set(t,e,i){u.has(t)||u.set(t,new Map);t=u.get(t);t.has(e)||0===t.size?t.set(e,i):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(t.keys())[0]}.`)},get:(t,e)=>u.has(t)&&u.get(t).get(e)||null,remove(t,e){var i;u.has(t)&&((i=u.get(t)).delete(e),0===i.size&&u.delete(t))}};function at(e){if("true"===e)return!0;if("false"===e)return!1;if(e===Number(e).toString())return Number(e);if(""===e||"null"===e)return null;if("string"!=typeof e)return e;try{return JSON.parse(decodeURIComponent(e))}catch(t){return e}}function lt(t){return t.replace(/[A-Z]/g,t=>"-"+t.toLowerCase())}const _={setDataAttribute(t,e,i){t.setAttribute("data-bs-"+lt(e),i)},removeDataAttribute(t,e){t.removeAttribute("data-bs-"+lt(e))},getDataAttributes(e){if(!e)return{};var i={};for(const s of Object.keys(e.dataset).filter(t=>t.startsWith("bs")&&!t.startsWith("bsConfig"))){let t=s.replace(/^bs/,"");i[t=t.charAt(0).toLowerCase()+t.slice(1,t.length)]=at(e.dataset[s])}return i},getDataAttribute:(t,e)=>at(t.getAttribute("data-bs-"+lt(e)))};class p{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(t){return t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t}_mergeConfigObj(t,e){var i=o(e)?_.getDataAttribute(e,"config"):{};return{...this.constructor.Default,..."object"==typeof i?i:{},...o(e)?_.getDataAttributes(e):{},..."object"==typeof t?t:{}}}_typeCheckConfig(t,e=this.constructor.DefaultType){for(const n of Object.keys(e)){var i=e[n],s=t[n],s=o(s)?"element":null==s?""+s:Object.prototype.toString.call(s).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(i).test(s))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${n}" provided type "${s}" but expected type "${i}".`)}}}class f extends p{constructor(t,e){super(),(t=s(t))&&(this._element=t,this._config=this._getConfig(e),rt.set(this._element,this.constructor.DATA_KEY,this))}dispose(){rt.remove(this._element,this.constructor.DATA_KEY),g.off(this._element,this.constructor.EVENT_KEY);for(const t of Object.getOwnPropertyNames(this))this[t]=null}_queueCallback(t,e,i=!0){$(t,e,i)}_getConfig(t){return t=this._mergeConfigObj(t,this._element),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}static getInstance(t){return rt.get(s(t),this.DATA_KEY)}static getOrCreateInstance(t,e={}){return this.getInstance(t)||new this(t,"object"==typeof e?e:null)}static get VERSION(){return"5.2.1"}static get DATA_KEY(){return"bs."+this.NAME}static get EVENT_KEY(){return"."+this.DATA_KEY}static eventName(t){return""+t+this.EVENT_KEY}}t=(e,i="hide")=>{const t="click.dismiss"+e.EVENT_KEY,s=e.NAME;g.on(document,t,`[data-bs-dismiss="${s}"]`,function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),a(this)||(t=n(this)||this.closest("."+s),e.getOrCreateInstance(t)[i]())})};class m extends f{static get NAME(){return"alert"}close(){var t;g.trigger(this._element,"close.bs.alert").defaultPrevented||(this._element.classList.remove("show"),t=this._element.classList.contains("fade"),this._queueCallback(()=>this._destroyElement(),this._element,t))}_destroyElement(){this._element.remove(),g.trigger(this._element,"closed.bs.alert"),this.dispose()}static jQueryInterface(e){return this.each(function(){var t=m.getOrCreateInstance(this);if("string"==typeof e){if(void 0===t[e]||e.startsWith("_")||"constructor"===e)throw new TypeError(`No method named "${e}"`);t[e](this)}})}}t(m,"close"),e(m);const ct='[data-bs-toggle="button"]';class b extends f{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(e){return this.each(function(){var t=b.getOrCreateInstance(this);"toggle"===e&&t[e]()})}}g.on(document,"click.bs.button.data-api",ct,t=>{t.preventDefault();t=t.target.closest(ct);b.getOrCreateInstance(t).toggle()}),e(b);const v={find:(t,e=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(e,t)),findOne:(t,e=document.documentElement)=>Element.prototype.querySelector.call(e,t),children:(t,e)=>[].concat(...t.children).filter(t=>t.matches(e)),parents(t,e){var i=[];let s=t.parentNode.closest(e);for(;s;)i.push(s),s=s.parentNode.closest(e);return i},prev(t,e){let i=t.previousElementSibling;for(;i;){if(i.matches(e))return[i];i=i.previousElementSibling}return[]},next(t,e){let i=t.nextElementSibling;for(;i;){if(i.matches(e))return[i];i=i.nextElementSibling}return[]},focusableChildren(t){var e=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map(t=>t+':not([tabindex^="-"])').join(",");return this.find(e,t).filter(t=>!a(t)&&r(t))}},ht={endCallback:null,leftCallback:null,rightCallback:null},dt={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class ut extends p{constructor(t,e){super(),(this._element=t)&&ut.isSupported()&&(this._config=this._getConfig(e),this._deltaX=0,this._supportPointerEvents=Boolean(window.PointerEvent),this._initEvents())}static get Default(){return ht}static get DefaultType(){return dt}static get NAME(){return"swipe"}dispose(){g.off(this._element,".bs.swipe")}_start(t){this._supportPointerEvents?this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX):this._deltaX=t.touches[0].clientX}_end(t){this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX-this._deltaX),this._handleSwipe(),d(this._config.endCallback)}_move(t){this._deltaX=t.touches&&1<t.touches.length?0:t.touches[0].clientX-this._deltaX}_handleSwipe(){var t=Math.abs(this._deltaX);t<=40||(t=t/this._deltaX,this._deltaX=0,t&&d(0<t?this._config.rightCallback:this._config.leftCallback))}_initEvents(){this._supportPointerEvents?(g.on(this._element,"pointerdown.bs.swipe",t=>this._start(t)),g.on(this._element,"pointerup.bs.swipe",t=>this._end(t)),this._element.classList.add("pointer-event")):(g.on(this._element,"touchstart.bs.swipe",t=>this._start(t)),g.on(this._element,"touchmove.bs.swipe",t=>this._move(t)),g.on(this._element,"touchend.bs.swipe",t=>this._end(t)))}_eventIsPointerPenTouch(t){return this._supportPointerEvents&&("pen"===t.pointerType||"touch"===t.pointerType)}static isSupported(){return"ontouchstart"in document.documentElement||0<navigator.maxTouchPoints}}const y="next",w="prev",A="left",T="right",_t="slid.bs.carousel",gt="carousel",E="active",pt={ArrowLeft:T,ArrowRight:A},ft={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},mt={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class C extends f{constructor(t,e){super(t,e),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=v.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===gt&&this.cycle()}static get Default(){return ft}static get DefaultType(){return mt}static get NAME(){return"carousel"}next(){this._slide(y)}nextWhenVisible(){!document.hidden&&r(this._element)&&this.next()}prev(){this._slide(w)}pause(){this._isSliding&&H(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval(()=>this.nextWhenVisible(),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?g.one(this._element,_t,()=>this.cycle()):this.cycle())}to(t){var e,i=this._getItems();t>i.length-1||t<0||(this._isSliding?g.one(this._element,_t,()=>this.to(t)):(e=this._getItemIndex(this._getActive()))!==t&&(e=e<t?y:w,this._slide(e,i[t])))}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(t){return t.defaultInterval=t.interval,t}_addEventListeners(){this._config.keyboard&&g.on(this._element,"keydown.bs.carousel",t=>this._keydown(t)),"hover"===this._config.pause&&(g.on(this._element,"mouseenter.bs.carousel",()=>this.pause()),g.on(this._element,"mouseleave.bs.carousel",()=>this._maybeEnableCycle())),this._config.touch&&ut.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const t of v.find(".carousel-item img",this._element))g.on(t,"dragstart.bs.carousel",t=>t.preventDefault());const t={leftCallback:()=>this._slide(this._directionToOrder(A)),rightCallback:()=>this._slide(this._directionToOrder(T)),endCallback:()=>{"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout(()=>this._maybeEnableCycle(),500+this._config.interval))}};this._swipeHelper=new ut(this._element,t)}_keydown(t){var e;/input|textarea/i.test(t.target.tagName)||(e=pt[t.key])&&(t.preventDefault(),this._slide(this._directionToOrder(e)))}_getItemIndex(t){return this._getItems().indexOf(t)}_setActiveIndicatorElement(t){var e;this._indicatorsElement&&((e=v.findOne(".active",this._indicatorsElement)).classList.remove(E),e.removeAttribute("aria-current"),(e=v.findOne(`[data-bs-slide-to="${t}"]`,this._indicatorsElement))&&(e.classList.add(E),e.setAttribute("aria-current","true")))}_updateInterval(){var t=this._activeElement||this._getActive();t&&(t=Number.parseInt(t.getAttribute("data-bs-interval"),10),this._config.interval=t||this._config.defaultInterval)}_slide(e,t=null){if(!this._isSliding){const i=this._getActive(),s=e===y,n=t||R(this._getItems(),i,s,this._config.wrap);if(n!==i){const o=this._getItemIndex(n),r=t=>g.trigger(this._element,t,{relatedTarget:n,direction:this._orderToDirection(e),from:this._getItemIndex(i),to:o});if(!r("slide.bs.carousel").defaultPrevented&&i&&n){t=Boolean(this._interval);this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(o),this._activeElement=n;const a=s?"carousel-item-start":"carousel-item-end",l=s?"carousel-item-next":"carousel-item-prev";n.classList.add(l),c(n),i.classList.add(a),n.classList.add(a),this._queueCallback(()=>{n.classList.remove(a,l),n.classList.add(E),i.classList.remove(E,l,a),this._isSliding=!1,r(_t)},i,this._isAnimated()),t&&this.cycle()}}}}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return v.findOne(".active.carousel-item",this._element)}_getItems(){return v.find(".carousel-item",this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(t){return h()?t===A?w:y:t===A?y:w}_orderToDirection(t){return h()?t===w?A:T:t===w?T:A}static jQueryInterface(e){return this.each(function(){var t=C.getOrCreateInstance(this,e);if("number"!=typeof e){if("string"==typeof e){if(void 0===t[e]||e.startsWith("_")||"constructor"===e)throw new TypeError(`No method named "${e}"`);t[e]()}}else t.to(e)})}}g.on(document,"click.bs.carousel.data-api","[data-bs-slide], [data-bs-slide-to]",function(t){var e=n(this);e&&e.classList.contains(gt)&&(t.preventDefault(),t=C.getOrCreateInstance(e),(e=this.getAttribute("data-bs-slide-to"))?t.to(e):"next"===_.getDataAttribute(this,"slide")?t.next():t.prev(),t._maybeEnableCycle())}),g.on(window,"load.bs.carousel.data-api",()=>{for(const t of v.find('[data-bs-ride="carousel"]'))C.getOrCreateInstance(t)}),e(C);const bt="show",vt="collapse",yt="collapsing",wt='[data-bs-toggle="collapse"]',At={parent:null,toggle:!0},Tt={parent:"(null|element)",toggle:"boolean"};class k extends f{constructor(t,e){super(t,e),this._isTransitioning=!1,this._triggerArray=[];const i=v.find(wt);for(const t of i){const e=z(t),i=v.find(e).filter(t=>t===this._element);null!==e&&i.length&&this._triggerArray.push(t)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return At}static get DefaultType(){return Tt}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(!this._isTransitioning&&!this._isShown()){let t=[];if(!((t=this._config.parent?this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter(t=>t!==this._element).map(t=>k.getOrCreateInstance(t,{toggle:!1})):t).length&&t[0]._isTransitioning||g.trigger(this._element,"show.bs.collapse").defaultPrevented)){for(const i of t)i.hide();const i=this._getDimension();this._element.classList.remove(vt),this._element.classList.add(yt),this._element.style[i]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;var e="scroll"+(i[0].toUpperCase()+i.slice(1));this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(yt),this._element.classList.add(vt,bt),this._element.style[i]="",g.trigger(this._element,"shown.bs.collapse")},this._element,!0),this._element.style[i]=this._element[e]+"px"}}}hide(){if(!this._isTransitioning&&this._isShown()&&!g.trigger(this._element,"hide.bs.collapse").defaultPrevented){const e=this._getDimension();this._element.style[e]=this._element.getBoundingClientRect()[e]+"px",c(this._element),this._element.classList.add(yt),this._element.classList.remove(vt,bt);for(const e of this._triggerArray){var t=n(e);t&&!this._isShown(t)&&this._addAriaAndCollapsedClass([e],!1)}this._isTransitioning=!0,this._element.style[e]="",this._queueCallback(()=>{this._isTransitioning=!1,this._element.classList.remove(yt),this._element.classList.add(vt),g.trigger(this._element,"hidden.bs.collapse")},this._element,!0)}}_isShown(t=this._element){return t.classList.contains(bt)}_configAfterMerge(t){return t.toggle=Boolean(t.toggle),t.parent=s(t.parent),t}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(this._config.parent){const t=this._getFirstLevelChildren(wt);for(const e of t){const t=n(e);t&&this._addAriaAndCollapsedClass([e],this._isShown(t))}}}_getFirstLevelChildren(t){const e=v.find(":scope .collapse .collapse",this._config.parent);return v.find(t,this._config.parent).filter(t=>!e.includes(t))}_addAriaAndCollapsedClass(t,e){if(t.length)for(const i of t)i.classList.toggle("collapsed",!e),i.setAttribute("aria-expanded",e)}static jQueryInterface(e){const i={};return"string"==typeof e&&/show|hide/.test(e)&&(i.toggle=!1),this.each(function(){var t=k.getOrCreateInstance(this,i);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e]()}})}}g.on(document,"click.bs.collapse.data-api",wt,function(t){("A"===t.target.tagName||t.delegateTarget&&"A"===t.delegateTarget.tagName)&&t.preventDefault();var e=z(this);for(const t of v.find(e))k.getOrCreateInstance(t,{toggle:!1}).toggle()}),e(k);const Et="dropdown",Ct="ArrowDown",kt="click.bs.dropdown.data-api",Lt="keydown.bs.dropdown.data-api",L="show",I='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',It=(I,".dropdown-menu"),Ot=h()?"top-end":"top-start",St=h()?"top-start":"top-end",Dt=h()?"bottom-end":"bottom-start",Nt=h()?"bottom-start":"bottom-end",Pt=h()?"left-start":"right-start",xt=h()?"right-start":"left-start",Mt={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},jt={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class O extends f{constructor(t,e){super(t,e),this._popper=null,this._parent=this._element.parentNode,this._menu=v.next(this._element,It)[0]||v.prev(this._element,It)[0],this._inNavbar=this._detectNavbar()}static get Default(){return Mt}static get DefaultType(){return jt}static get NAME(){return Et}toggle(){return this._isShown()?this.hide():this.show()}show(){if(!a(this._element)&&!this._isShown()){const t={relatedTarget:this._element};if(!g.trigger(this._element,"show.bs.dropdown",t).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const t of[].concat(...document.body.children))g.on(t,"mouseover",l);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add(L),this._element.classList.add(L),g.trigger(this._element,"shown.bs.dropdown",t)}}}hide(){var t;!a(this._element)&&this._isShown()&&(t={relatedTarget:this._element},this._completeHide(t))}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(t){if(!g.trigger(this._element,"hide.bs.dropdown",t).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))g.off(t,"mouseover",l);this._popper&&this._popper.destroy(),this._menu.classList.remove(L),this._element.classList.remove(L),this._element.setAttribute("aria-expanded","false"),_.removeDataAttribute(this._menu,"popper"),g.trigger(this._element,"hidden.bs.dropdown",t)}}_getConfig(t){if("object"!=typeof(t=super._getConfig(t)).reference||o(t.reference)||"function"==typeof t.reference.getBoundingClientRect)return t;throw new TypeError(Et.toUpperCase()+': Option "reference" provided type "object" without a required "getBoundingClientRect" method.')}_createPopper(){if(void 0===i)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let t=this._element;"parent"===this._config.reference?t=this._parent:o(this._config.reference)?t=s(this._config.reference):"object"==typeof this._config.reference&&(t=this._config.reference);var e=this._getPopperConfig();this._popper=i.createPopper(t,this._menu,e)}_isShown(){return this._menu.classList.contains(L)}_getPlacement(){var t,e=this._parent;return e.classList.contains("dropend")?Pt:e.classList.contains("dropstart")?xt:e.classList.contains("dropup-center")?"top":e.classList.contains("dropdown-center")?"bottom":(t="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim(),e.classList.contains("dropup")?t?St:Ot:t?Nt:Dt)}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const e=this._config["offset"];return"string"==typeof e?e.split(",").map(t=>Number.parseInt(t,10)):"function"==typeof e?t=>e(t,this._element):e}_getPopperConfig(){var t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return!this._inNavbar&&"static"!==this._config.display||(_.setDataAttribute(this._menu,"popper","static"),t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_selectMenuItem({key:t,target:e}){var i=v.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter(t=>r(t));i.length&&R(i,e,t===Ct,!i.includes(e)).focus()}static jQueryInterface(e){return this.each(function(){var t=O.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e]()}})}static clearMenus(t){if(2!==t.button&&("keyup"!==t.type||"Tab"===t.key)){const s=v.find('[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled).show');for(const n of s){const s=O.getInstance(n);var e,i;s&&!1!==s._config.autoClose&&(e=(i=t.composedPath()).includes(s._menu),i.includes(s._element)||"inside"===s._config.autoClose&&!e||"outside"===s._config.autoClose&&e||s._menu.contains(t.target)&&("keyup"===t.type&&"Tab"===t.key||/input|select|option|textarea|form/i.test(t.target.tagName))||(i={relatedTarget:s._element},"click"===t.type&&(i.clickEvent=t),s._completeHide(i)))}}}static dataApiKeydownHandler(t){var e=/input|textarea/i.test(t.target.tagName),i="Escape"===t.key,s=["ArrowUp",Ct].includes(t.key);!s&&!i||e&&!i||(t.preventDefault(),e=this.matches(I)?this:v.prev(this,I)[0]||v.next(this,I)[0],i=O.getOrCreateInstance(e),s?(t.stopPropagation(),i.show(),i._selectMenuItem(t)):i._isShown()&&(t.stopPropagation(),i.hide(),e.focus()))}}g.on(document,Lt,I,O.dataApiKeydownHandler),g.on(document,Lt,It,O.dataApiKeydownHandler),g.on(document,kt,O.clearMenus),g.on(document,"keyup.bs.dropdown.data-api",O.clearMenus),g.on(document,kt,I,function(t){t.preventDefault(),O.getOrCreateInstance(this).toggle()}),e(O);const Ft=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",zt=".sticky-top",Ht="padding-right",qt="margin-right";class Bt{constructor(){this._element=document.body}getWidth(){var t=document.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}hide(){const e=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,Ht,t=>t+e),this._setElementAttributes(Ft,Ht,t=>t+e),this._setElementAttributes(zt,qt,t=>t-e)}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,Ht),this._resetElementAttributes(Ft,Ht),this._resetElementAttributes(zt,qt)}isOverflowing(){return 0<this.getWidth()}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(t,i,s){const n=this.getWidth();this._applyManipulationCallback(t,t=>{var e;t!==this._element&&window.innerWidth>t.clientWidth+n||(this._saveInitialAttribute(t,i),e=window.getComputedStyle(t).getPropertyValue(i),t.style.setProperty(i,s(Number.parseFloat(e))+"px"))})}_saveInitialAttribute(t,e){var i=t.style.getPropertyValue(e);i&&_.setDataAttribute(t,e,i)}_resetElementAttributes(t,i){this._applyManipulationCallback(t,t=>{var e=_.getDataAttribute(t,i);null!==e?(_.removeDataAttribute(t,i),t.style.setProperty(i,e)):t.style.removeProperty(i)})}_applyManipulationCallback(t,e){if(o(t))e(t);else for(const i of v.find(t,this._element))e(i)}}const Wt="mousedown.bs.backdrop",$t={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},Rt={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Vt extends p{constructor(t){super(),this._config=this._getConfig(t),this._isAppended=!1,this._element=null}static get Default(){return $t}static get DefaultType(){return Rt}static get NAME(){return"backdrop"}show(t){var e;this._config.isVisible?(this._append(),e=this._getElement(),this._config.isAnimated&&c(e),e.classList.add("show"),this._emulateAnimation(()=>{d(t)})):d(t)}hide(t){this._config.isVisible?(this._getElement().classList.remove("show"),this._emulateAnimation(()=>{this.dispose(),d(t)})):d(t)}dispose(){this._isAppended&&(g.off(this._element,Wt),this._element.remove(),this._isAppended=!1)}_getElement(){var t;return this._element||((t=document.createElement("div")).className=this._config.className,this._config.isAnimated&&t.classList.add("fade"),this._element=t),this._element}_configAfterMerge(t){return t.rootElement=s(t.rootElement),t}_append(){var t;this._isAppended||(t=this._getElement(),this._config.rootElement.append(t),g.on(t,Wt,()=>{d(this._config.clickCallback)}),this._isAppended=!0)}_emulateAnimation(t){$(t,this._getElement(),this._config.isAnimated)}}const Kt=".bs.focustrap",Qt="backward",Xt={autofocus:!0,trapElement:null},Yt={autofocus:"boolean",trapElement:"element"};class Ut extends p{constructor(t){super(),this._config=this._getConfig(t),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return Xt}static get DefaultType(){return Yt}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),g.off(document,Kt),g.on(document,"focusin.bs.focustrap",t=>this._handleFocusin(t)),g.on(document,"keydown.tab.bs.focustrap",t=>this._handleKeydown(t)),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,g.off(document,Kt))}_handleFocusin(t){var e=this._config["trapElement"];t.target===document||t.target===e||e.contains(t.target)||(0===(t=v.focusableChildren(e)).length?e:this._lastTabNavDirection===Qt?t[t.length-1]:t[0]).focus()}_handleKeydown(t){"Tab"===t.key&&(this._lastTabNavDirection=t.shiftKey?Qt:"forward")}}const Gt="hidden.bs.modal",Jt="show.bs.modal",Zt="modal-open",te="modal-static",ee={backdrop:!0,focus:!0,keyboard:!0},ie={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class S extends f{constructor(t,e){super(t,e),this._dialog=v.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new Bt,this._addEventListeners()}static get Default(){return ee}static get DefaultType(){return ie}static get NAME(){return"modal"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||this._isTransitioning||g.trigger(this._element,Jt,{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(Zt),this._adjustDialog(),this._backdrop.show(()=>this._showElement(t)))}hide(){!this._isShown||this._isTransitioning||g.trigger(this._element,"hide.bs.modal").defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove("show"),this._queueCallback(()=>this._hideModal(),this._element,this._isAnimated()))}dispose(){for(const t of[window,this._dialog])g.off(t,".bs.modal");this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Vt({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new Ut({trapElement:this._element})}_showElement(t){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;var e=v.findOne(".modal-body",this._dialog);e&&(e.scrollTop=0),c(this._element),this._element.classList.add("show"),this._queueCallback(()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,g.trigger(this._element,"shown.bs.modal",{relatedTarget:t})},this._dialog,this._isAnimated())}_addEventListeners(){g.on(this._element,"keydown.dismiss.bs.modal",t=>{if("Escape"===t.key)return this._config.keyboard?(t.preventDefault(),void this.hide()):void this._triggerBackdropTransition()}),g.on(window,"resize.bs.modal",()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()}),g.on(this._element,"mousedown.dismiss.bs.modal",e=>{g.one(this._element,"click.dismiss.bs.modal",t=>{this._dialog.contains(e.target)||this._dialog.contains(t.target)||("static"!==this._config.backdrop?this._config.backdrop&&this.hide():this._triggerBackdropTransition())})})}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide(()=>{document.body.classList.remove(Zt),this._resetAdjustments(),this._scrollBar.reset(),g.trigger(this._element,Gt)})}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(!g.trigger(this._element,"hidePrevented.bs.modal").defaultPrevented){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._element.style.overflowY;"hidden"===e||this._element.classList.contains(te)||(t||(this._element.style.overflowY="hidden"),this._element.classList.add(te),this._queueCallback(()=>{this._element.classList.remove(te),this._queueCallback(()=>{this._element.style.overflowY=e},this._dialog)},this._dialog),this._element.focus())}}_adjustDialog(){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._scrollBar.getWidth(),i=0<e;if(i&&!t){const t=h()?"paddingLeft":"paddingRight";this._element.style[t]=e+"px"}if(!i&&t){const t=h()?"paddingRight":"paddingLeft";this._element.style[t]=e+"px"}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(e,i){return this.each(function(){var t=S.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e](i)}})}}g.on(document,"click.bs.modal.data-api",'[data-bs-toggle="modal"]',function(t){const e=n(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),g.one(e,Jt,t=>{t.defaultPrevented||g.one(e,Gt,()=>{r(this)&&this.focus()})});t=v.findOne(".modal.show");t&&S.getInstance(t).hide(),S.getOrCreateInstance(e).toggle(this)}),t(S),e(S);const se="showing",ne=".offcanvas.show",oe="hidePrevented.bs.offcanvas",re="hidden.bs.offcanvas",ae={backdrop:!0,keyboard:!0,scroll:!1},le={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class D extends f{constructor(t,e){super(t,e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return ae}static get DefaultType(){return le}static get NAME(){return"offcanvas"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||g.trigger(this._element,"show.bs.offcanvas",{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._backdrop.show(),this._config.scroll||(new Bt).hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(se),this._queueCallback(()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add("show"),this._element.classList.remove(se),g.trigger(this._element,"shown.bs.offcanvas",{relatedTarget:t})},this._element,!0))}hide(){!this._isShown||g.trigger(this._element,"hide.bs.offcanvas").defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add("hiding"),this._backdrop.hide(),this._queueCallback(()=>{this._element.classList.remove("show","hiding"),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||(new Bt).reset(),g.trigger(this._element,re)},this._element,!0))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){var t=Boolean(this._config.backdrop);return new Vt({className:"offcanvas-backdrop",isVisible:t,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:t?()=>{"static"!==this._config.backdrop?this.hide():g.trigger(this._element,oe)}:null})}_initializeFocusTrap(){return new Ut({trapElement:this._element})}_addEventListeners(){g.on(this._element,"keydown.dismiss.bs.offcanvas",t=>{"Escape"===t.key&&(this._config.keyboard?this.hide():g.trigger(this._element,oe))})}static jQueryInterface(e){return this.each(function(){var t=D.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e]||e.startsWith("_")||"constructor"===e)throw new TypeError(`No method named "${e}"`);t[e](this)}})}}g.on(document,"click.bs.offcanvas.data-api",'[data-bs-toggle="offcanvas"]',function(t){var e=n(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),a(this)||(g.one(e,re,()=>{r(this)&&this.focus()}),(t=v.findOne(ne))&&t!==e&&D.getInstance(t).hide(),D.getOrCreateInstance(e).toggle(this))}),g.on(window,"load.bs.offcanvas.data-api",()=>{for(const t of v.find(ne))D.getOrCreateInstance(t).show()}),g.on(window,"resize.bs.offcanvas",()=>{for(const t of v.find("[aria-modal][class*=show][class*=offcanvas-]"))"fixed"!==getComputedStyle(t).position&&D.getOrCreateInstance(t).hide()}),t(D),e(D);const ce=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),he=/^(?:(?:https?|mailto|ftp|tel|file|sms):|[^#&/:?]*(?:[#/?]|$))/i,de=/^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i,ue={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],div:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},_e={allowList:ue,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},ge={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},pe={entry:"(string|element|function|null)",selector:"(string|element)"};class fe extends p{constructor(t){super(),this._config=this._getConfig(t)}static get Default(){return _e}static get DefaultType(){return ge}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map(t=>this._resolvePossibleFunction(t)).filter(Boolean)}hasContent(){return 0<this.getContent().length}changeContent(t){return this._checkContent(t),this._config.content={...this._config.content,...t},this}toHtml(){var t=document.createElement("div");t.innerHTML=this._maybeSanitize(this._config.template);for(const[e,i]of Object.entries(this._config.content))this._setContent(t,i,e);const e=t.children[0],i=this._resolvePossibleFunction(this._config.extraClass);return i&&e.classList.add(...i.split(" ")),e}_typeCheckConfig(t){super._typeCheckConfig(t),this._checkContent(t.content)}_checkContent(t){for(var[e,i]of Object.entries(t))super._typeCheckConfig({selector:e,entry:i},pe)}_setContent(t,e,i){i=v.findOne(i,t);i&&((e=this._resolvePossibleFunction(e))?o(e)?this._putElementInTemplate(s(e),i):this._config.html?i.innerHTML=this._maybeSanitize(e):i.textContent=e:i.remove())}_maybeSanitize(t){if(this._config.sanitize){var e=t,i=this._config.allowList,s=this._config.sanitizeFn;if(!e.length)return e;if(s&&"function"==typeof s)return s(e);const n=(new window.DOMParser).parseFromString(e,"text/html"),o=[].concat(...n.body.querySelectorAll("*"));for(const e of o){const s=e.nodeName.toLowerCase();if(Object.keys(i).includes(s)){const n=[].concat(...e.attributes),o=[].concat(i["*"]||[],i[s]||[]);for(const i of n)((t,e)=>{const i=t.nodeName.toLowerCase();return e.includes(i)?!ce.has(i)||Boolean(he.test(t.nodeValue)||de.test(t.nodeValue)):e.filter(t=>t instanceof RegExp).some(t=>t.test(i))})(i,o)||e.removeAttribute(i.nodeName)}else e.remove()}return n.body.innerHTML}return t}_resolvePossibleFunction(t){return"function"==typeof t?t(this):t}_putElementInTemplate(t,e){this._config.html?(e.innerHTML="",e.append(t)):e.textContent=t.textContent}}const me=new Set(["sanitize","allowList","sanitizeFn"]),be="fade",ve="show",ye="hide.bs.modal",we="hover",Ae={AUTO:"auto",TOP:"top",RIGHT:h()?"left":"right",BOTTOM:"bottom",LEFT:h()?"right":"left"},Te={allowList:ue,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,0],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},Ee={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class N extends f{constructor(t,e){if(void 0===i)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(t,e),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners()}static get Default(){return Te}static get DefaultType(){return Ee}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(t){this._isEnabled&&(t?((t=this._initializeOnDelegatedTarget(t))._activeTrigger.click=!t._activeTrigger.click,t._isWithActiveTrigger()?t._enter():t._leave()):this._isShown()?this._leave():this._enter())}dispose(){clearTimeout(this._timeout),g.off(this._element.closest(".modal"),ye,this._hideModalHandler),this.tip&&this.tip.remove(),this._config.originalTitle&&this._element.setAttribute("title",this._config.originalTitle),this._disposePopper(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(this._isWithContent()&&this._isEnabled){const i=g.trigger(this._element,this.constructor.eventName("show")),s=(q(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(!i.defaultPrevented&&s){this.tip&&(this.tip.remove(),this.tip=null);var t=this._getTipElement(),e=(this._element.setAttribute("aria-describedby",t.getAttribute("id")),this._config)["container"];if(this._element.ownerDocument.documentElement.contains(this.tip)||(e.append(t),g.trigger(this._element,this.constructor.eventName("inserted"))),this._popper?this._popper.update():this._popper=this._createPopper(t),t.classList.add(ve),"ontouchstart"in document.documentElement)for(const i of[].concat(...document.body.children))g.on(i,"mouseover",l);this._queueCallback(()=>{g.trigger(this._element,this.constructor.eventName("shown")),!1===this._isHovered&&this._leave(),this._isHovered=!1},this.tip,this._isAnimated())}}}hide(){if(this._isShown()&&!g.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented){const t=this._getTipElement();if(t.classList.remove(ve),"ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))g.off(t,"mouseover",l);this._activeTrigger.click=!1,this._activeTrigger.focus=!1,this._activeTrigger.hover=!1,this._isHovered=null,this._queueCallback(()=>{this._isWithActiveTrigger()||(this._isHovered||t.remove(),this._element.removeAttribute("aria-describedby"),g.trigger(this._element,this.constructor.eventName("hidden")),this._disposePopper())},this.tip,this._isAnimated())}}update(){this._popper&&this._popper.update()}_isWithContent(){return Boolean(this._getTitle())}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(t){t=this._getTemplateFactory(t).toHtml();if(!t)return null;t.classList.remove(be,ve),t.classList.add(`bs-${this.constructor.NAME}-auto`);var e=(t=>{for(;t+=Math.floor(1e6*Math.random()),document.getElementById(t););return t})(this.constructor.NAME).toString();return t.setAttribute("id",e),this._isAnimated()&&t.classList.add(be),t}setContent(t){this._newContent=t,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(t){return this._templateFactory?this._templateFactory.changeContent(t):this._templateFactory=new fe({...this._config,content:t,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{".tooltip-inner":this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._config.originalTitle}_initializeOnDelegatedTarget(t){return this.constructor.getOrCreateInstance(t.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(be)}_isShown(){return this.tip&&this.tip.classList.contains(ve)}_createPopper(t){var e="function"==typeof this._config.placement?this._config.placement.call(this,t,this._element):this._config.placement,e=Ae[e.toUpperCase()];return i.createPopper(this._element,t,this._getPopperConfig(e))}_getOffset(){const e=this._config["offset"];return"string"==typeof e?e.split(",").map(t=>Number.parseInt(t,10)):"function"==typeof e?t=>e(t,this._element):e}_resolvePossibleFunction(t){return"function"==typeof t?t.call(this._element):t}_getPopperConfig(t){t={placement:t,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:t=>{this._getTipElement().setAttribute("data-popper-placement",t.state.placement)}}]};return{...t,..."function"==typeof this._config.popperConfig?this._config.popperConfig(t):this._config.popperConfig}}_setListeners(){const t=this._config.trigger.split(" ");for(const e of t)if("click"===e)g.on(this._element,this.constructor.eventName("click"),this._config.selector,t=>this.toggle(t));else if("manual"!==e){const t=e===we?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),i=e===we?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");g.on(this._element,t,this._config.selector,t=>{var e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusin"===t.type?"focus":we]=!0,e._enter()}),g.on(this._element,i,this._config.selector,t=>{var e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusout"===t.type?"focus":we]=e._element.contains(t.relatedTarget),e._leave()})}this._hideModalHandler=()=>{this._element&&this.hide()},g.on(this._element.closest(".modal"),ye,this._hideModalHandler),this._config.selector?this._config={...this._config,trigger:"manual",selector:""}:this._fixTitle()}_fixTitle(){var t=this._config.originalTitle;t&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",t),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout(()=>{this._isHovered&&this.show()},this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout(()=>{this._isHovered||this.hide()},this._config.delay.hide))}_setTimeout(t,e){clearTimeout(this._timeout),this._timeout=setTimeout(t,e)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(t){var e=_.getDataAttributes(this._element);for(const t of Object.keys(e))me.has(t)&&delete e[t];return t={...e,..."object"==typeof t&&t?t:{}},t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t.container=!1===t.container?document.body:s(t.container),"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),t.originalTitle=this._element.getAttribute("title")||"","number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),t}_getDelegateConfig(){var t={};for(const e in this._config)this.constructor.Default[e]!==this._config[e]&&(t[e]=this._config[e]);return t}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null)}static jQueryInterface(e){return this.each(function(){var t=N.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e]()}})}}e(N);const Ce={...N.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},ke={...N.DefaultType,content:"(null|string|element|function)"};class Le extends N{static get Default(){return Ce}static get DefaultType(){return ke}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(e){return this.each(function(){var t=Le.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e]()}})}}e(Le);const Ie="click.bs.scrollspy",P="active",Oe={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},Se={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class De extends f{constructor(t,e){super(t,e),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return Oe}static get DefaultType(){return Se}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const t of this._observableSections.values())this._observer.observe(t)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(t){return t.target=s(t.target)||document.body,t.rootMargin=t.offset?t.offset+"px 0px -30%":t.rootMargin,"string"==typeof t.threshold&&(t.threshold=t.threshold.split(",").map(t=>Number.parseFloat(t))),t}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(g.off(this._config.target,Ie),g.on(this._config.target,Ie,"[href]",t=>{var e=this._observableSections.get(t.target.hash);e&&(t.preventDefault(),t=this._rootElement||window,e=e.offsetTop-this._element.offsetTop,t.scrollTo?t.scrollTo({top:e,behavior:"smooth"}):t.scrollTop=e)}))}_getNewObserver(){var t={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver(t=>this._observerCallback(t),t)}_observerCallback(t){const e=t=>this._targetLinks.get("#"+t.target.id),i=t=>{this._previousScrollData.visibleEntryTop=t.target.offsetTop,this._process(e(t))},s=(this._rootElement||document.documentElement).scrollTop,n=s>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=s;for(const o of t)if(o.isIntersecting){const t=o.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(n&&t){if(i(o),!s)return}else n||t||i(o)}else this._activeTarget=null,this._clearActiveClass(e(o))}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const t=v.find("[href]",this._config.target);for(const e of t)if(e.hash&&!a(e)){const t=v.findOne(e.hash,this._element);r(t)&&(this._targetLinks.set(e.hash,e),this._observableSections.set(e.hash,t))}}_process(t){this._activeTarget!==t&&(this._clearActiveClass(this._config.target),(this._activeTarget=t).classList.add(P),this._activateParents(t),g.trigger(this._element,"activate.bs.scrollspy",{relatedTarget:t}))}_activateParents(t){if(t.classList.contains("dropdown-item"))v.findOne(".dropdown-toggle",t.closest(".dropdown")).classList.add(P);else for(const e of v.parents(t,".nav, .list-group"))for(const t of v.prev(e,".nav-link, .nav-item > .nav-link, .list-group-item"))t.classList.add(P)}_clearActiveClass(t){t.classList.remove(P);var e=v.find("[href].active",t);for(const t of e)t.classList.remove(P)}static jQueryInterface(e){return this.each(function(){var t=De.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e]||e.startsWith("_")||"constructor"===e)throw new TypeError(`No method named "${e}"`);t[e]()}})}}g.on(window,"load.bs.scrollspy.data-api",()=>{for(const t of v.find('[data-bs-spy="scroll"]'))De.getOrCreateInstance(t)}),e(De);const Ne="ArrowRight",Pe="ArrowDown",x="active",xe="show",Me='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',je='.nav-link:not(.dropdown-toggle), .list-group-item:not(.dropdown-toggle), [role="tab"]:not(.dropdown-toggle), '+Me;class M extends f{constructor(t){super(t),this._parent=this._element.closest('.list-group, .nav, [role="tablist"]'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),g.on(this._element,"keydown.bs.tab",t=>this._keydown(t)))}static get NAME(){return"tab"}show(){var t,e,i=this._element;this._elemIsActive(i)||(e=(t=this._getActiveElem())?g.trigger(t,"hide.bs.tab",{relatedTarget:i}):null,g.trigger(i,"show.bs.tab",{relatedTarget:t}).defaultPrevented||e&&e.defaultPrevented||(this._deactivate(t,i),this._activate(i,t)))}_activate(t,e){t&&(t.classList.add(x),this._activate(n(t)),this._queueCallback(()=>{"tab"===t.getAttribute("role")?(t.focus(),t.removeAttribute("tabindex"),t.setAttribute("aria-selected",!0),this._toggleDropDown(t,!0),g.trigger(t,"shown.bs.tab",{relatedTarget:e})):t.classList.add(xe)},t,t.classList.contains("fade")))}_deactivate(t,e){t&&(t.classList.remove(x),t.blur(),this._deactivate(n(t)),this._queueCallback(()=>{"tab"===t.getAttribute("role")?(t.setAttribute("aria-selected",!1),t.setAttribute("tabindex","-1"),this._toggleDropDown(t,!1),g.trigger(t,"hidden.bs.tab",{relatedTarget:e})):t.classList.remove(xe)},t,t.classList.contains("fade")))}_keydown(t){var e;["ArrowLeft",Ne,"ArrowUp",Pe].includes(t.key)&&(t.stopPropagation(),t.preventDefault(),e=[Ne,Pe].includes(t.key),(t=R(this._getChildren().filter(t=>!a(t)),t.target,e,!0))&&M.getOrCreateInstance(t).show())}_getChildren(){return v.find(je,this._parent)}_getActiveElem(){return this._getChildren().find(t=>this._elemIsActive(t))||null}_setInitialAttributes(t,e){this._setAttributeIfNotExists(t,"role","tablist");for(const t of e)this._setInitialAttributesOnChild(t)}_setInitialAttributesOnChild(t){t=this._getInnerElement(t);var e=this._elemIsActive(t),i=this._getOuterElement(t);t.setAttribute("aria-selected",e),i!==t&&this._setAttributeIfNotExists(i,"role","presentation"),e||t.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(t,"role","tab"),this._setInitialAttributesOnTargetPanel(t)}_setInitialAttributesOnTargetPanel(t){var e=n(t);e&&(this._setAttributeIfNotExists(e,"role","tabpanel"),t.id&&this._setAttributeIfNotExists(e,"aria-labelledby","#"+t.id))}_toggleDropDown(t,i){const s=this._getOuterElement(t);s.classList.contains("dropdown")&&((t=(t,e)=>{t=v.findOne(t,s);t&&t.classList.toggle(e,i)})(".dropdown-toggle",x),t(".dropdown-menu",xe),t(".dropdown-item",x),s.setAttribute("aria-expanded",i))}_setAttributeIfNotExists(t,e,i){t.hasAttribute(e)||t.setAttribute(e,i)}_elemIsActive(t){return t.classList.contains(x)}_getInnerElement(t){return t.matches(je)?t:v.findOne(je,t)}_getOuterElement(t){return t.closest(".nav-item, .list-group-item")||t}static jQueryInterface(e){return this.each(function(){var t=M.getOrCreateInstance(this);if("string"==typeof e){if(void 0===t[e]||e.startsWith("_")||"constructor"===e)throw new TypeError(`No method named "${e}"`);t[e]()}})}}g.on(document,"click.bs.tab",Me,function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),a(this)||M.getOrCreateInstance(this).show()}),g.on(window,"load.bs.tab",()=>{for(const t of v.find('.active[data-bs-toggle="tab"], .active[data-bs-toggle="pill"], .active[data-bs-toggle="list"]'))M.getOrCreateInstance(t)}),e(M);const Fe="show",ze="showing",He={animation:"boolean",autohide:"boolean",delay:"number"},qe={animation:!0,autohide:!0,delay:5e3};class Be extends f{constructor(t,e){super(t,e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return qe}static get DefaultType(){return He}static get NAME(){return"toast"}show(){g.trigger(this._element,"show.bs.toast").defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove("hide"),c(this._element),this._element.classList.add(Fe,ze),this._queueCallback(()=>{this._element.classList.remove(ze),g.trigger(this._element,"shown.bs.toast"),this._maybeScheduleHide()},this._element,this._config.animation))}hide(){!this.isShown()||g.trigger(this._element,"hide.bs.toast").defaultPrevented||(this._element.classList.add(ze),this._queueCallback(()=>{this._element.classList.add("hide"),this._element.classList.remove(ze,Fe),g.trigger(this._element,"hidden.bs.toast")},this._element,this._config.animation))}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(Fe),super.dispose()}isShown(){return this._element.classList.contains(Fe)}_maybeScheduleHide(){!this._config.autohide||this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout(()=>{this.hide()},this._config.delay))}_onInteraction(t,e){switch(t.type){case"mouseover":case"mouseout":this._hasMouseInteraction=e;break;case"focusin":case"focusout":this._hasKeyboardInteraction=e}e?this._clearTimeout():(t=t.relatedTarget,this._element===t||this._element.contains(t)||this._maybeScheduleHide())}_setListeners(){g.on(this._element,"mouseover.bs.toast",t=>this._onInteraction(t,!0)),g.on(this._element,"mouseout.bs.toast",t=>this._onInteraction(t,!1)),g.on(this._element,"focusin.bs.toast",t=>this._onInteraction(t,!0)),g.on(this._element,"focusout.bs.toast",t=>this._onInteraction(t,!1))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(e){return this.each(function(){var t=Be.getOrCreateInstance(this,e);if("string"==typeof e){if(void 0===t[e])throw new TypeError(`No method named "${e}"`);t[e](this)}})}}return t(Be),e(Be),{Alert:m,Button:b,Carousel:C,Collapse:k,Dropdown:O,Modal:S,Offcanvas:D,Popover:Le,ScrollSpy:De,Tab:M,Toast:Be,Tooltip:N}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
